<policies>
    <inbound>
        <base />


        <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized">
            <issuer-signing-keys>
                <key>${SigningKey}</key>
            </issuer-signing-keys>
            <!-- JSON Web Tokens (JWT) - Check that a Claim Exists -->
            <!-- Add required claims to policy -->
            <!-- <required-claims>
                <claim name="admin" match="any">
                    <value>true</value>
                </claim>
            </required-claims> -->
        </validate-jwt>

        <!-- Authorization Code Flow -->
        <!-- <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized. Access token is missing or invalid.">
            <openid-config url="https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration" />
            <audiences>
                <audience>${Audience}</audience>
            </audiences>
        </validate-jwt> -->
        
        <!-- JSON Web Tokens (JWT) - Extract Claim and Pass to Backend -->
        <!-- Pass JWT token to backend as header -->
        <!-- <set-header exists-action="override" name="username">
            <value>@{
                Jwt jwt;
                context.Request.Headers.GetValueOrDefault("Authorization","scheme param").Split(' ').Last().TryParseJwt(out jwt);
                return jwt.Claims.GetValueOrDefault("name", "?");
            }</value>
        </set-header> -->
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>